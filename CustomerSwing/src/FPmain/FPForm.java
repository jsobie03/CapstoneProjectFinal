package FPmain;

import FPdb.DBException;

import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import FPdialog.addDialog;
import FPdialog.deleteDialog;
import FPdialog.tableDialog;
import FPdialog.updateDialog;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Jonathan Sobier
 * @version 12/17/2017
 */
public class FPForm extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form FPForm
     */
    public FPForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        entityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("CustomerDB?zeroDateTimeBehavior=convertToNullPU").createEntityManager();
        customer_1Query = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Customer_1 c");
        customer_1List = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : customer_1Query.getResultList();
        jPanel1 = new javax.swing.JPanel();
        listButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        exitButton = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        helpButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        setLocation(new java.awt.Point(775, 400));
        setName("Customer Maintenance Application"); // NOI18N
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(128, 128, 128));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("FPmain/Bundle"); // NOI18N
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 0, 0)), bundle.getString("FPForm.jPanel1.border.title"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.CENTER, new java.awt.Font("Arial", 1, 17), new java.awt.Color(0, 0, 0))); // NOI18N
        jPanel1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.setName("jPanel1"); // NOI18N

        listButton.setBackground(new java.awt.Color(0, 0, 0));
        listButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        listButton.setForeground(new java.awt.Color(255, 255, 255));
        listButton.setText(bundle.getString("FPForm.listButton.text")); // NOI18N
        listButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        listButton.setIconTextGap(0);
        listButton.setMargin(new java.awt.Insets(3, 20, 3, 30));
        listButton.setName("listButton"); // NOI18N
        listButton.addActionListener(this);
        listButton.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 0, 0)));

        addButton.setBackground(new java.awt.Color(0, 0, 0));
        addButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText(bundle.getString("FPForm.addButton.text")); // NOI18N
        addButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addButton.setMargin(new java.awt.Insets(3, 20, 3, 30));
        addButton.setName("addButton"); // NOI18N
        addButton.addActionListener(this);
        addButton.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 0, 0)));

        deleteButton.setBackground(new java.awt.Color(0, 0, 0));
        deleteButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText(bundle.getString("FPForm.deleteButton.text")); // NOI18N
        deleteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deleteButton.setMargin(new java.awt.Insets(3, 20, 3, 30));
        deleteButton.setName("deleteButton"); // NOI18N
        deleteButton.addActionListener(this);
        deleteButton.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 0, 0)));

        exitButton.setBackground(new java.awt.Color(0, 0, 0));
        exitButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        exitButton.setForeground(new java.awt.Color(255, 255, 255));
        exitButton.setText(bundle.getString("FPForm.exitButton.text")); // NOI18N
        exitButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitButton.setMargin(new java.awt.Insets(3, 20, 3, 30));
        exitButton.setName("exitButton"); // NOI18N
        exitButton.addActionListener(this);
        exitButton.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 0, 0)));

        updateBtn.setBackground(new java.awt.Color(0, 0, 0));
        updateBtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setText(bundle.getString("FPForm.updateBtn.text")); // NOI18N
        updateBtn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        updateBtn.setMargin(new java.awt.Insets(3, 20, 3, 30));
        updateBtn.setName("updateBtn"); // NOI18N
        updateBtn.addActionListener(this);
        updateBtn.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 0, 0)));

        helpButton.setBackground(new java.awt.Color(0, 0, 0));
        helpButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        helpButton.setForeground(new java.awt.Color(255, 255, 255));
        helpButton.setText(bundle.getString("FPForm.helpButton.text")); // NOI18N
        helpButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        helpButton.setMargin(new java.awt.Insets(3, 20, 3, 30));
        helpButton.setName("helpButton"); // NOI18N
        helpButton.addActionListener(this);
        helpButton.setBorder(javax.swing.BorderFactory.createMatteBorder(4, 4, 4, 4, new java.awt.Color(255, 0, 0)));

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, listButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, addButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                .add(deleteButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, updateBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, helpButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(exitButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED))
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .add(listButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(addButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(deleteButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(updateBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(helpButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(exitButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED))
        );

        pack();
    }

    // Code for dispatching events from components to event handlers.
    @Override
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        if (evt.getSource() == listButton) {
            FPForm.this.listButtonActionPerformed(evt);
        } else if (evt.getSource() == addButton) {
            FPForm.this.addButtonActionPerformed(evt);
        } else if (evt.getSource() == deleteButton) {
            FPForm.this.deleteButtonActionPerformed(evt);
        } else if (evt.getSource() == exitButton) {
            FPForm.this.exitButtonActionPerformed(evt);
        } else if (evt.getSource() == updateBtn) {
            FPForm.this.updateBtnActionPerformed(evt);
        } else if (evt.getSource() == helpButton) {
            FPForm.this.helpButtonActionPerformed(evt);
        }
    }// </editor-fold>                        

    private void exitButtonActionPerformed(java.awt.event.ActionEvent evt) {
        System.exit(0);
    }

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {
        String help = "List        - This will list all customer data that is in the database in the table that opens." + "\n\n"
                + "Add       - Add a new customer to the database." + "\n\n"
                + "Delete   - Enter email address into delete field to delete that customer's data." + "\n\n"
                + "Update  - Enter a customer ID number and delete that customer data from the database." + "\n\n"
                + "Help      - Displays this help menu." + "\n\n"
                + "Exit       - Exit the application." + "\n";

        JOptionPane.showMessageDialog(helpButton, help, "HELP MENU", 1);
        this.setLocation(725, 400);
    }

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {
        addDialog addDialog = new addDialog();
    }

    private void listButtonActionPerformed(java.awt.event.ActionEvent evt) {
        try {
            tableDialog tableDialog = new tableDialog();
        } catch (DBException | SQLException ex) {
            Logger.getLogger(FPForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {
        new deleteDialog() {
        };

    }

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {
        updateDialog updateDialog = new updateDialog();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FPForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FPForm().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify     
    private javax.swing.JButton addButton;
    private java.util.List<FPmain.Customer_1> customer_1List;
    private javax.persistence.Query customer_1Query;
    private javax.swing.JButton deleteButton;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton exitButton;
    private javax.swing.JButton helpButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton listButton;
    private javax.swing.JButton updateBtn;

    // End of variables declaration                   
}
